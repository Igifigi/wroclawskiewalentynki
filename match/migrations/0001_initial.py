# Generated by Django 4.1.5 on 2023-01-19 14:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('code', models.CharField(max_length=3, verbose_name='Code')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instagram', models.URLField(blank=True)),
                ('facebook', models.URLField(blank=True)),
                ('tiktok', models.URLField(blank=True)),
                ('question1', models.IntegerField(choices=[(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='What class are you in?')),
                ('question2', models.IntegerField(choices=[(1, 'Boy'), (2, 'Girl'), (3, 'Non-binary person')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='You identify yourself as:')),
                ('question3', models.IntegerField(choices=[(1, 'Boy'), (2, 'Girl'), (3, 'Non-binary person'), (4, "I don't care")], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Who would you like to be matched with?')),
                ('question4', models.IntegerField(choices=[(1, 'For a date üòé'), (2, 'To meet someone interesting')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], verbose_name='I want to meet:')),
                ('question5', models.IntegerField(choices=[(1, 'Cinema'), (2, 'Museum'), (3, 'Coffee'), (4, 'Drink (or three)'), (5, 'Billards')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='The ideal date/meeting is:')),
                ('question6', models.IntegerField(choices=[(1, "I'm going to a meeting"), (2, 'I go home and study for the test')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], verbose_name='You have a geo test tomorrow, but you were supposed to meet your friends today. What do you do?')),
                ('question7', models.IntegerField(choices=[(1, 'I play Fifa/LOL/CS or whatever'), (2, 'I meet with friends'), (3, 'I read'), (4, 'Sports/gym üòéüí™üèã'), (5, 'I watch - movies, series')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='In free time:')),
                ('question8', models.IntegerField(choices=[(1, 'Mata'), (2, 'Freddie Mercury'), (3, 'Malik Montana'), (4, 'Ludwig van BeethovenDrake'), (5, 'Frank Sinatra'), (6, 'Lana Del Rey'), (7, 'Zbigniew Wodecki'), (8, 'Red Hot Chili Peppers'), (9, 'Dawid Podsiad≈Ço'), (10, 'BTS'), (11, 'Harry Styles'), (12, 'Arctic Monkeys'), (13, 'Pleyboy Carti')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(13)], verbose_name='If you had to listen to one musician for the next year, it would be:')),
                ('question9', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='On a scale of 1 to 10, how decisive are you?')),
                ('question10', models.IntegerField(choices=[(1, 'Dogs, cats are too independent'), (2, 'Cats, dogs stink'), (3, "I don't like animals"), (4, "Doesn't matter, I love all animals")], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Dogs or perhaps cats?')),
                ('question11', models.IntegerField(choices=[(1, '1 - I plan everything, ordnung muss sein'), (2, '2'), (3, '3'), (4, '4'), (5, '5 - Full of spontaneity')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='How spontaneous are you?')),
                ('question12', models.IntegerField(choices=[(1, "Yes, I'd rather not bother with them"), (2, 'No, nothing that human is to me strange')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], verbose_name='Do you avoid serious topics?')),
                ('question13', models.IntegerField(choices=[(1, 'Mathematics/Physics'), (2, 'Polish'), (3, 'Geography'), (4, 'IT'), (5, 'History/Society knowledge'), (6, 'Foreign Languages'), (7, 'Biology/Chemistry'), (8, 'PE')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)], verbose_name='My favorite subject at school is:')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
    ]
